---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Deploy telegraf
  hosts: "all"
  gather_facts: true
  user: root
  tasks:
    - name: Add influxdata apt-keys
      apt_key:
        url: "https://repos.influxdata.com/influxdb.key"
        state: "present"
    - name: Add influxdata repo
      apt_repository:
        repo: "deb https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: "present"
    - name: Install telegraf
      apt:
        pkg: "telegraf"
        state: "latest"
    - name: Install Ethtool
      apt:
        pkg: "ethtool"
        state: "latest"
    - name: Create telegraf plugin dir
      file:
        path: "/opt/telegraf"
        state: directory
        mode: "0755"
    - name: Drop telegraf plugin file(s)
      copy:
        src: "files/{{ item.value.plugin_name }}"
        dest: "/opt/telegraf/{{ item.value.plugin_name }}"
        mode: '0755'
      with_dict: "{{ command_plugins }}"
      when:
        - item.value.when_group | bool
        - inventory_hostname in groups[item.value.group]
    - name: Add to command plugins
      set_fact:
        commands: "{{ commands | union(item.value.command) }}"
      with_dict: "{{ command_plugins }}"
      when:
        - item.value.when_group | bool
        - inventory_hostname in groups[item.value.group]
      tags:
        - always
    - name: Copy JSON to Influx parser
      copy:
        src: "files/jsontoinflux.py"
        dest: "/opt/telegraf/jsontoinflux.py"
    - name: Drop telegraf config file
      template:
        src: templates/telegraf.conf.j2
        dest: /etc/telegraf/telegraf.conf
      register: telegraf_config
    - name: copy the openrc file to home directory
      shell: cp /root/openrc /home/openrc;chmod 644 /home/openrc
      when: inventory_hostname in groups['utility_all']
    - name: Enable and restart telegraf
      service:
        name: "telegraf"
        enabled: true
        state: restarted
      when: telegraf_config | changed
    - name: Enable and start telegraf
      service:
        name: "telegraf"
        enabled: true
        state: started
      when: not telegraf_config | changed
  vars:
    commands : []
    command_plugins:
      cinder:
        plugin_name: "cinder_data.py"
        command:
          - "python /opt/telegraf/cinder_data.py"
        group: "utility_all"
        when_group: "{{ (groups['cinder_all'] | length) > 0 }}"
      kvm:
        plugin_name: "kvm_virsh.py"
        command:
          - "python /opt/telegraf/kvm_virsh.py"
        group: "nova_compute"
        when_group: "{{ (groups['nova_compute'] | length) > 0 }}"
      interface_max_speed:
        plugin_name: "maxspeed_interface.py"
        command:
          - "python /opt/telegraf/maxspeed_interface.py"
        group: "all"
        when_group: "{{ (groups['all'] | length) > 0 }}"
  vars_files:
    - vars.yml
