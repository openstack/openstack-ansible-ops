---
# Copyright 2025, Advanced Hosters B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Encrypt/Rotate files with individual secrets encrypted
  when:
    - ansible_vault_action in ['encrypt', 'rotate']
  block:
    - name: Find secrets file for region
      ansible.builtin.find:
        paths: "{{ ansible_vault_secrets_search_paths }}"
        patterns: "{{ ansible_vault_secrets_search_pattern }}"
        recurse: true
      register: _found_secret_files

    - name: Verify existance of expected files
      vars:
        _ansible_vault_found_secrets_paths: "{{ _found_secret_files.get('files', []) | map(attribute='path') }}"
      ansible.builtin.stat:
        path: "{{ item }}"
      loop: "{{ _ansible_vault_found_secrets_paths + ansible_vault_secrets_paths }}"
      register: _encrypt_string_files

    - name: Encrypt individual secrets in files
      ansible.builtin.include_tasks:
        file: ansible_vault_strings.yml
      loop: "{{ _encrypt_string_files.results | selectattr('stat.exists') }}"
      loop_control:
        loop_var: file
        label: "{{ file['stat']['path'] }}"

- name: Encrypt private keys for PKI/SSH
  block:
    - name: Find private keys in the directory
      ansible.builtin.find:
        paths: "{{ ansible_vault_repo_path }}/pki/"
        patterns: "*.key.pem"
        recurse: true
      register: __private_keys

    - name: Find SSH private keys in the directory
      ansible.builtin.find:
        paths: "{{ ansible_vault_repo_path }}/ssh_keypairs/"
        patterns: "^(?!.*\\.(pub|info)($|\\?)).*"
        use_regex: true
        recurse: false
      register: __ssh_keys

    - name: Decrypt private keys
      ansible.builtin.command:
        argv:
          - "{{ ansible_vault_binary }}"
          - decrypt
          - --vault-id
          - "{{ ansible_vault_region | upper }}@{{ ansible_vault_pw }}"
          - "{{ item }}"
      failed_when:
        - not (_decrypt_keys.rc == 1 and 'input is not vault encrypted data' in _decrypt_keys.stderr)
        - not _decrypt_keys.rc == 0
      changed_when:
        - _decrypt_keys.rc == 0
      register: _decrypt_keys
      with_items: "{{ __private_keys.files | map(attribute='path') | list + __ssh_keys.files | map(attribute='path') | list }}"
      when:
        - ansible_vault_action in ['decrypt', 'rotate']

    - name: Encrypt private keys
      ansible.builtin.command:
        argv:
          - "{{ ansible_vault_binary }}"
          - encrypt
          - --vault-id
          - "{{ ansible_vault_region | upper }}@{{ _ansible_vault_encrypt_file }}"
          - "{{ item }}"
      register: _encrypt_keys
      failed_when:
        - not (_encrypt_keys.rc == 1 and 'input is already encrypted' in _encrypt_keys.stderr)
        - not _encrypt_keys.rc == 0
      changed_when:
        - _encrypt_keys.rc == 0
      with_items: "{{ __private_keys.files | map(attribute='path') | list + __ssh_keys.files | map(attribute='path') | list }}"
      when:
        - ansible_vault_action in ['encrypt', 'rotate']
