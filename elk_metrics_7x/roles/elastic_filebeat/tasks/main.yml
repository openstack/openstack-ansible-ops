---
# Copyright 2018, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_version'].split('.')[0] }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}.yml"
      paths:
        - "{{ role_path }}/vars"
  tags:
    - always

- name: Ensure beat is installed
  package:
    name: "{{ filebeat_distro_packages }}"
    state: "{{ elk_package_state | default('present') }}"
    update_cache: "{{ (ansible_facts['pkg_mgr'] == 'apt') | ternary('yes', omit) }}"
  register: _package_task
  until: _package_task is success
  retries: 3
  delay: 2
  notify:
    - Enable and restart filebeat
  tags:
    - package_install

- name: Create filebeat systemd service config dir
  file:
    path: "/etc/systemd/system/filebeat.service.d"
    state: "directory"
    group: "root"
    owner: "root"
    mode: "0755"

- name: Apply systemd options
  template:
    src: "{{ item.src }}"
    dest: "/etc/systemd/system/filebeat.service.d/{{ item.dest }}"
    mode: "0644"
  with_items:
    - src: "systemd.general-overrides.conf.j2"
      dest: "filebeat-overrides.conf"
  notify:
    - Enable and restart filebeat

- name: Populate service facts
  service_facts:

- name: Set dicovery facts to enable Filebeat modules
  set_fact:
    elasticsearch_enabled: "{{ ((ansible_facts.services['elasticsearch.service'] | default({}))['state'] | default('')) == 'running' }}"
    logstash_enabled: "{{ ((ansible_facts.services['logstash.service'] | default({}))['state'] | default('')) == 'running' }}"
    kibana_enabled: "{{ ((ansible_facts.services['kibana.service'] | default({}))['state'] | default('')) == 'running' }}"
    haproxy_enabled: "{{ ((ansible_facts.services['haproxy.service'] | default({}))['state'] | default('')) == 'running' }}"
    nginx_enabled: "{{ ((ansible_facts.services['nginx.service'] | default({}))['state'] | default('')) == 'running' }}"

- name: Drop Filebeat conf file
  template:
    src: "filebeat.yml.j2"
    dest: "/etc/filebeat/filebeat.yml"
  notify:
    - Enable and restart filebeat

- include_role:
    name: elastic_ilm
  when: ilm_policy.keys() | length > 0

- name: Run the beat setup role
  include_role:
    name: elastic_beat_setup
  when:
    - (groups['kibana'] | length) > 0 or (elk_beat_setup | bool)
  vars:
    elastic_beat_name: "filebeat"

- name: Force beat handlers
  meta: flush_handlers

- name: set filebeat service state
  systemd:
    name: "filebeat"
    state: "{{ filebeat_service_state }}"
    enabled: "{{ filebeat_service_state in ['running', 'started', 'restarted'] }}"
  when:
    - filebeat_service_state in ['started', 'stopped']
